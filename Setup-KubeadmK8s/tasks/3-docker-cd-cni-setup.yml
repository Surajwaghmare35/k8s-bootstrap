---
# -------- Docker CNI Setup ------- #

- name: Install Containerd CNI-plugin
  get_url: url={{ containerd_cni_url }} dest=/tmp/cni-plugins.tgz force=true

- name: Create /opt/cni/bin directory
  file: path=/opt/cni/bin state=directory

- name: Extract CNI plugins
  unarchive: src=/tmp/cni-plugins.tgz dest=/opt/cni/bin remote_src=yes

# sudo rm -rf /etc/containerd/config.toml
# containerd config default | sudo tee /etc/containerd/config.toml

- name: save default 'containerd_config.toml in pwd
  shell: containerd config default > /home/{{ ansible_user }}/containerd_config.toml

- name: move 'containerd_config.toml' in /etc/containerd/config.toml
  copy:
    src: /home/{{ ansible_user }}/containerd_config.toml
    remote_src: true
    dest: /etc/containerd/config.toml
    force: true

# - name: Replace cd_unix address value
#   lineinfile:
#     path: /etc/containerd/config.toml
#     search_string: 'address = "/run/containerd/containerd.sock"'
#     line: '  address = "{{ containerd_uds }}"'

- name: Update sandbox_image,SystemdCgroup in default Containerd config.
  shell: "{{ item }}"
  loop: "{{ default_cd_config }}"
  notify:
    - Update Unix domain socket Perm!
    - Restart Docker & Containerd

# - name: comment disabled_plugins line in non-default '/etc/containerd/config.toml'
#   shell: sudo sed -i 's/^disabled_plugins \=/\#disabled_plugins \=/g' /etc/containerd/config.toml

# - name: Update non-default Containerd config.
#   lineinfile: path=/etc/containerd/config.toml line={{ cd_config }}
#   loop: "{{ containerd_config_toml }}"
#   notify:
#     - Restart Docker & Containerd
#     - Reboot Docker Setup
#   loop_control:
#     loop_var: cd_config

# - name: Check dockerd process
#   shell: netstat -lntp | grep -e dockerd -e containerd
#   register: dockerd_process
#   changed_when: false

# - name: Display dockerd process if found
#   debug:
#     var: dockerd_process.stdout_lines
#   when: dockerd_process.stdout_lines | length > 0
#   notify: Reboot Docker Setup
